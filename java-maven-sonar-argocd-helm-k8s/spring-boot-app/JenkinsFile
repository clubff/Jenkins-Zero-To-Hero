node {
    docker {
        image 'abhishekf5/maven-abhishek-docker-agent:v1'
        args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }

    stage('Checkout') {
        git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
    }

    stage('Build and Test') {
        sh 'ls -ltr'
        // build the project and create a JAR file
        // sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
    }

    stage('Static Code Analysis') {
        // environment {
        //     SONAR_URL = "http://34.201.116.83:9000"
        // }
        // steps {
        //     withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
        //         sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        //     }
        // }
    }

    stage('Build and Push Docker Image') {
        env.DOCKER_IMAGE = "dockerrepository123/ultimate-cicd:${BUILD_NUMBER}"
        // env.DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        env.REGISTRY_CREDENTIALS = credentials('docker-cred')

        try {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        } finally {
            // Cleanup Docker resources if needed
            sh 'docker system prune -f'
        }
    }

    stage('Update Deployment File') {
        env.GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        env.GIT_USER_NAME = "vishnureddy997"

        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            sh '''
                git config user.email "vishnureddy14ma@gmail.com"
                git config user.name "vishnu"
                BUILD_NUMBER=${BUILD_NUMBER}
                sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
        }
    }
}
